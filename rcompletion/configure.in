
AC_INIT(src/rcompletion.c)

## we need to get the same settings that R will use to compile this
## otherwise we may be testing the wrong compiler or flags
## (see R-ext manual!)
: ${R_HOME=`R RHOME`}
if test -z "${R_HOME}"; then
   echo "could not determine R_HOME"
   exit 1
fi
#echo ${R_HOME}
CC=`"${R_HOME}/bin/R" CMD config CC`
CFLAGS=`"${R_HOME}/bin/R" CMD config CFLAGS`
CPPFLAGS=`"${R_HOME}/bin/R" CMD config CPPFLAGS`
LIBR=`"${R_HOME}/bin/R" CMD config --ldflags 2>/dev/null`
LIBS="${LIBR}"

#echo "CFLAGS=${CFLAGS}"
#echo "CPPFLAGS=${CPPFLAGS}"
#echo "LIBS=${LIBS}"

r_sav_CFLAGS="${CFLAGS}"
r_sav_CPPFLAGS="${CPPFLAGS}"
r_sav_LIBS="${LIBS}"
CFLAGS="${PKG_CFLAGS} ${CFLAGS}"
CPPFLAGS="${PKG_CPPFLAGS} ${CPPFLAGS}"
LIBS="${PKG_LIBS} ${LIBS}"

AC_CHECK_HEADERS([readline/readline.h],
                [
                AC_MSG_NOTICE(system readline headers found)
		CFLAGS="${CFLAGS} -DHAVE_READLINE_H"
                ],
                [
                AC_MSG_NOTICE(readline header not found)
                AC_MSG_NOTICE(using package headers instead)
                ])

has_readline=no


## first try system readline (it may be more reliable)
AC_SEARCH_LIBS([rl_completion_matches], 
               [readline],
	       [has_readline=yes], 
	       [
		# it may have failed due to dependencies on ncurses/termcap
		rl_sav_LIBS="${LIBS}"
		AC_CHECK_LIB(ncurses, main, [],
                            [AC_CHECK_LIB(termcap, main, [],
                                          [AC_CHECK_LIB(termlib, main)])])
                unset ac_cv_search_rl_completion_matches
                AC_SEARCH_LIBS([rl_completion_matches], [readline],
                               [has_readline=yes], [LIBS=${rl_sav_LIBS}])
               ])



if test "${has_readline}" != yes; then
   ## if we have R shared library, we may get readline from it
   if test -n "${LIBR}"; then
      AC_MSG_CHECKING([whether readline can be obtained from R shared library])
      AC_LANG_CONFTEST([AC_LANG_PROGRAM(,[[rl_completion_matches();]])])
      echo "running R CMD SHLIB conftest.c" >&5
      "${R_HOME}/bin/R" CMD SHLIB conftest.c >&5 2>&5
      r_load_res=`echo 'dyn.load(paste("conftest",.Platform$dynlib.ext,sep=""));cat("OK")'|"${R_HOME}/bin/R" --no-save --vanilla --slave  2>&5`
      if test "${r_load_res}" = "OK"; then
	 AC_MSG_RESULT([yes])
	 has_readline=yes
      else
	 AC_MSG_RESULT([no])
      fi
      rm -rf conftest*
   fi
fi

if test "${has_readline}" != yes; then
  AC_MSG_ERROR([Cannot find suitable readline with rl_completion_matches.
Set PKG_CFLAGS/PKG_LIBS correspondingly if readline is installed in a non-standard location.])
fi

### remove flags that R will add during package compilation anyway
PKG_CFLAGS=`echo "${CFLAGS}" | sed "s|${r_sav_CFLAGS}| |"`
PKG_CPPFLAGS=`echo "${CPPFLAGS}" | sed "s|${r_sav_CPPFLAGS}| |"`
PKG_LIBS=`echo "${LIBS}" | sed "s|${r_sav_LIBS}| |"`

# uncomment this for debugging to see the flags used
#echo "CFLAGS=${CFLAGS}"
#echo "CPPFLAGS=${CPPFLAGS}"
#echo "LIBS=${LIBS}"
#echo "PKG_CFLAGS=${PKG_CFLAGS}"
#echo "PKG_CPPFLAGS=${PKG_CPPFLAGS}"
#echo "PKG_LIBS=${PKG_LIBS}"

AC_SUBST(PKG_CFLAGS)
AC_SUBST(PKG_CPPFLAGS)
AC_SUBST(PKG_LIBS)

AC_OUTPUT(src/Makevars)

